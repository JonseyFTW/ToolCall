services:
  # Main Qwen Agent Application
  qwen-agent-chat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qwen-agent-chat
    # Changed from expose to ports since nginx will use different ports
    ports:
      - "5001:5001"  # Keep direct access available
    environment:
      - DEBUG=${DEBUG:-True}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - VLLM_VERIFY_SSL=False
      - VLLM_BASE_URL=${VLLM_BASE_URL}
      - VLLM_MODEL=${VLLM_MODEL}
      - VLLM_API_KEY=${VLLM_API_KEY}
      - PLAYWRIGHT_SERVICE_URL=http://playwright-service:3000
      - RESPONSE_TIMEOUT=${RESPONSE_TIMEOUT:-120}
      - QWEN_AGENT_MAX_TOKENS=${QWEN_AGENT_MAX_TOKENS:-4000}
      - QWEN_AGENT_TEMPERATURE=${QWEN_AGENT_TEMPERATURE:-0.3}
      # SSL configuration
      - SSL_ENABLED=${SSL_ENABLED:-false}
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
    depends_on:
      playwright-service:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - .\logs:/app/logs
    networks:
      - qwen-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Playwright Web Scraping Service with fixed browser installation
  playwright-service:
    build:
      context: ./playwright-service
      dockerfile: Dockerfile
    container_name: playwright-service
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - MAX_BROWSER_INSTANCES=${MAX_BROWSER_INSTANCES:-3}
      - REQUESTS_PER_MINUTE=${REQUESTS_PER_MINUTE:-30}
      - CACHE_TTL_MINUTES=${CACHE_TTL_MINUTES:-5}
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS=true
      - ENABLE_CACHE=true
      - BLOCK_RESOURCES=true
    restart: unless-stopped
    volumes:
      - playwright-browsers:/ms-playwright  # Named volume for browsers
      - .\logs\playwright:/app/logs
    networks:
      - qwen-network
    # Windows-specific optimizations
    shm_size: 1gb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s  # Increased to allow browser installation
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Nginx reverse proxy with Windows-friendly ports
  nginx:
    image: nginx:1.24-alpine
    container_name: qwen-nginx
    ports:
      # Use non-privileged ports that don't require admin on Windows
      - "8080:80"    # HTTP on port 8080 instead of 80
      - "8443:443"   # HTTPS on port 8443 instead of 443
    volumes:
      # Mount nginx configuration
      - .\nginx\nginx.conf:/etc/nginx/nginx.conf:ro
      # Mount SSL certificates (your .pem files)
      - .\nginx\ssl:/etc/ssl:ro
      # Mount logs for debugging
      - .\logs\nginx:/var/log/nginx
    depends_on:
      qwen-agent-chat:
        condition: service_healthy
    networks:
      - qwen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

networks:
  qwen-network:
    driver: bridge
    name: qwen-network

# Named volumes for persistent browser storage
volumes:
  playwright-browsers:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: .\data\playwright-cache

# Alternative: For development without SSL/nginx, uncomment this simpler version
# version: '3.8'
# services:
#   qwen-agent-chat:
#     build: .
#     ports:
#       - "5001:5001"
#     environment:
#       - VLLM_BASE_URL=${VLLM_BASE_URL}
#       - VLLM_MODEL=${VLLM_MODEL}
#       - VLLM_API_KEY=${VLLM_API_KEY}
#       - PLAYWRIGHT_SERVICE_URL=http://playwright-service:3000
#     depends_on:
#       - playwright-service
#     networks:
#       - qwen-network
# 
#   playwright-service:
#     build: ./playwright-service
#     expose:
#       - "3000"
#     shm_size: 1gb
#     volumes:
#       - playwright-browsers:/ms-playwright
#     networks:
#       - qwen-network
# 
# volumes:
#   playwright-browsers:
# networks:
#   qwen-network: